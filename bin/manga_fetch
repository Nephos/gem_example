#!/usr/bin/env ruby

$threads = 8

$verbose = true
$debug = false
$verbose = false if ENV["VERBOSE"] == "false"
$debug = true if ENV["DEBUG"] == "true"

if $debug
  require_relative "../lib/manga_fetch"
else
  require "manga_fetch"
end

m = ARGV[1].match(/\A(\d+)\.\.(\d+)\Z/)
nums = (m[1].to_i .. m[2].to_i).to_a

nb_elem_by_list = (nums.size.to_f / $threads).ceil
lists = nums.each_slice(nb_elem_by_list).to_a

STDERR.puts "Starting #{$threads} threads..." if $verbose
lists.map.with_index do |current_nums, idx|
  t = Thread.new do
    STDERR.puts "Started #{idx+1} / #{$threads} threads" if $verbose
    bot = MangaFetch::Fetcher.new
    list = bot.fetch(name: ARGV[0], num: current_nums, download: true).flatten.sort
  end
  sleep 0.5
  t
end.map(&:join)
